<?php
/**
 * Provide a admin settings area view for the plugin
 *
 * This file is used to markup the admin-facing aspects of the plugin.
 *
 * @link       https://cobweb-security.com
 * @since      3.3.0
 *
 * @package    Cwis
 * @subpackage Cwis/admin/partials
 */
$is_settings_updated = null;
$wp_old_version = version_compare(get_bloginfo('version'), '4.0.0', '<');

// Get a list of all installed plugins and themes
$cwis_updater_methods = $this->get_class_instance('Cwis_Updater_Methods');
$all_plugins_installed = $cwis_updater_methods->get_all_plugins_installed();
$all_themes_installed = $cwis_updater_methods->get_all_themes_installed();

// Read the settings of core/plugin/theme updates from the database
$cwis_auto_core_updates = $cwis_updater_methods->get_cwis_auto_core_updates();
$cwis_auto_plugin_updates = $cwis_updater_methods->get_cwis_auto_plugin_updates(true);
$cwis_auto_theme_updates = $cwis_updater_methods->get_cwis_auto_theme_updates();

// Get configuration/helper data arrays
$auto_core_update_types = $cwis_updater_methods->get_auto_core_update_types();
$security_risk_levels = $cwis_updater_methods->get_security_risk_levels();

// WordPress auto core updates settings
if (isset($_POST['submit-cwis-core-updates']) && $_POST['submit-cwis-core-updates']) {
    $nonce = isset($_POST['_wpnonce']) ? $_POST['_wpnonce'] : null;
    if (($is_settings_updated = wp_verify_nonce($nonce, 'cwis-core-updates'))) {
        // Merge the core updates settings with all core update types
        $cwis_auto_core_updates = array_merge($cwis_auto_core_updates, $auto_core_update_types);
        if (isset($_POST['allow_auto_core_updates'])) {
            foreach ((array) $_POST['allow_auto_core_updates'] as $core_update_type) {
                $cwis_auto_core_updates[$core_update_type] = 1;
            }
        }
        update_option('CWIS_CORE_UPDATES', json_encode($cwis_auto_core_updates));

        // Force WordPress to check for core updates
        delete_option('_site_transient_update_core');
    }
}

// WordPress plugin updates settings
if (isset($_POST['submit-cwis-plugin-updates']) && $_POST['submit-cwis-plugin-updates']) {
    $nonce = isset($_POST['_wpnonce']) ? $_POST['_wpnonce'] : null;
    if (($is_settings_updated = wp_verify_nonce($nonce, 'cwis-plugin-updates'))) {
        // Merge all plugins data and update option
        if (is_array($all_plugins_installed)) {
            $cwis_auto_plugin_updates = array_merge($cwis_auto_plugin_updates,
                                                    array_fill_keys(array_keys($all_plugins_installed), 0));
        }
        if (isset($_POST['allow_auto_plugin_updates'])) {
            foreach ((array) $_POST['allow_auto_plugin_updates'] as $plugin_key_name) {
                $cwis_auto_plugin_updates[$plugin_key_name] = 1;
            }
        }
        update_option('CWIS_PLUGIN_UPDATES', json_encode($cwis_auto_plugin_updates));

        // Delete cached Defender Updater data
        $cwis_updater_methods->delete_cached_updater_data();

        // Force WordPress to check for plugin updates
        delete_option('_site_transient_update_plugins');
    }
}

// WordPress theme updates settings
if (isset($_POST['submit-cwis-theme-updates']) && $_POST['submit-cwis-theme-updates']) {
    $nonce = isset($_POST['_wpnonce']) ? $_POST['_wpnonce'] : null;
    if (($is_settings_updated = wp_verify_nonce($nonce, 'cwis-theme-updates'))) {
        // Merge all themes data and update option
        if (is_array($all_themes_installed)) {
            $cwis_auto_theme_updates = array_merge($cwis_auto_theme_updates,
                                                   array_fill_keys(array_keys($all_themes_installed), 0));
        }
        if (isset($_POST['allow_auto_theme_updates'])) {
            foreach ((array) $_POST['allow_auto_theme_updates'] as $theme_key_name) {
                $cwis_auto_theme_updates[$theme_key_name] = 1;
            }
        }
        update_option('CWIS_THEME_UPDATES', json_encode($cwis_auto_theme_updates));

        // Delete cached Defender Updater data
        $cwis_updater_methods->delete_cached_updater_data();

        // Force WordPress to check for theme updates
        delete_option('_site_transient_update_themes');
    }
}
?>

<!-- Custom CSS -->
<style>
    .update-nag,
    #zing-warning,
    #wpbody-content .notice,
    #wpbody-content .updated {
        display: none;
    }

    /* Heading */
    h2 small {
        color: #72777c;
    }

    /* WP v2.8+ fix */
    .plugins tr.inactive .second {
        background: none;
    }

    /* WP v4.0+ */
    #wpbody-content .plugins .plugin-title {
        white-space: normal;
        width: 25%;
        min-width: 150px;
        max-width: 300px;
    }
    .plugins .row-actions>a {
        color: #92979c;
    }
    html .plugins tr .check-column {
        border-right: 0;
        border-left: 4px solid transparent;
    }
    html[dir=rtl] .plugins tr .check-column {
        border-right: 4px solid transparent;
        border-left: 0;
    }
    <?php if (!$wp_old_version): /* padding, RTL-fix */ ?>
        html .plugins tr.active .check-column {
            padding-left: 6px;
        }
        html[dir=rtl] .plugins tr.active .check-column {
            padding-right: 6px;
        }
    <?php endif; ?>

    html .plugins tr.danger .check-column {
        border-right-color: #d9534f;
        border-left-color: #d9534f;
    }
    .plugins .danger td,
    .plugins .danger th {
        background-color: #f8eeee;
    }

    html .plugins tr.info .check-column {
        border-right-color: #5bc0de;
        border-left-color: #5bc0de;
    }
    .plugins .info td,
    .plugins .info th {
        background-color: #eef8fc;
    }

    html .plugins tr.success .check-column {
        border-right-color: #5cb85c;
        border-left-color: #5cb85c;
    }
    .plugins .success td,
    .plugins .success th {
        background-color: #dff0d8;
    }

    html .plugins tr.warning .check-column {
        border-right-color: #f0ad4e;
        border-left-color: #f0ad4e;
    }
    .plugins .warning td,
    .plugins .warning th {
        background-color: #fcf8e3;
    }

    /* Legend */
    .list-legend {
        list-style: none;
    }
    .list-legend li {
        background: linear-gradient(to right, #f4f4f4, #fff);
        border: 0;
        border-left: 6px solid transparent;
        padding-left: 1em;
    }
    .list-legend .danger {
        border-color: #d9534f;
    }
    .list-legend .info {
        border-color: #5bc0de;
    }
    .list-legend .success {
        border-color: #5cb85c;
    }
    .list-legend .warning {
        border-color: #f0ad4e;
    }
</style>

<div class="wrap">
    <div id="icon-plugins" class="icon32"><br></div>
    <h2>WebDefender Updater
        <small>&mdash; Settings for Automatic WordPress Updates</small>
    </h2>
    <hr />

    <div class="wrap-content">
        <?php if (null !== $is_settings_updated): ?>
            <?php if ($is_settings_updated): ?>
                <div id="message" class="updated"><p>Settings updated successfully.
                        Please logout and login again to get the proper effect.</p></div>
            <?php else: ?>
                <div id="message" class="error"><p>Failed to change the settings. Try again.</p></div>
            <?php endif; ?>
        <?php endif; ?>

        <p>A timely upgrade of plugins is essential not only to for functionality purposes.
            Very often, a version upgrade is associated with the elimination of security vulnerabilities,
            or in the case of the antivirus plugins, with the update of the virus database. The main reason that 
            many site owners do not install an automatic update is the fear of destroying the individual plugin settings.
            <em>Our plugin will help you keep track of the pluginâ€™s security upgrades and functional plugin control.</em>
            <br /><br />
        </p>

        <?php if (defined('AUTOMATIC_UPDATER_DISABLED') || defined('WP_AUTO_UPDATE_CORE')): ?>
            <div class="notice notice-warning is-dismissible">
                <?php
                $explanations = $snippets = array();
                $message = '<strong>Please note:</strong> Detected automatic updates configuration via '
                        . '<a title="Read more about it at the WordPress Codex page" href="https://codex.wordpress.org/Configuring_Automatic_Background_Updates#Configuration_via_wp-config.php">defined constants</a> in <tt>wp-config.php</tt> file';

                // To completely disable all types of automatic updates, core or otherwise, add the following to your wp-config.php file:
                // https://codex.wordpress.org/Configuring_Automatic_Background_Updates
                if (defined('AUTOMATIC_UPDATER_DISABLED')) {
                    switch (AUTOMATIC_UPDATER_DISABLED) {
                        case true:
                            $explanations[] = 'completely <strong>disabled</strong> all types of automatic updates and WordPress core updates';
                            $snippets[] = "define( 'AUTOMATIC_UPDATER_DISABLED', true );";
                            break;

                        case false:
                            $explanations[] = 'completely <strong>enabled</strong> all types of automatic background updates';
                            $snippets[] = "define( 'AUTOMATIC_UPDATER_DISABLED', false );";
                            break;
                    }
                }

                // WP_AUTO_UPDATE_CORE can be defined with one of three values, each producing a different behavior:
                if ((!defined('AUTOMATIC_UPDATER_DISABLED') || !AUTOMATIC_UPDATER_DISABLED) && defined('WP_AUTO_UPDATE_CORE')) {
                    switch (WP_AUTO_UPDATE_CORE) {
                        case true:
                            $explanations[] = 'development, minor, and major WordPress updates are all <strong>enabled</strong>';
                            $snippets[] = "define( 'WP_AUTO_UPDATE_CORE', true );";
                            break;

                        case false:
                            $explanations[] = 'development, minor, and major WordPress updates are all <strong>disabled</strong>';
                            $snippets[] = "define( 'WP_AUTO_UPDATE_CORE', false );";
                            break;

                        case 'minor':
                        default:
                            $explanations[] = 'minor WordPress updates are <strong>enabled</strong>, development, and major updates are <strong>disabled</strong>';
                            $snippets[] = "define( 'WP_AUTO_UPDATE_CORE', 'minor' );";
                    }
                }
                ?>
                <p><?php echo $message . ' (' . implode('; ', $explanations) . '):'; ?></p>
                <pre><?php echo implode("\n", $snippets); ?></pre>
            </div>
        <?php endif; ?>

        <h3>WordPress Core Updates</h3>
        <p>Automatic background updates were introduced in WordPress 3.7 in an effort to promote better security, 
            and to streamline the update experience overall. The core developers made a conscious decision to enable
            automatic updates for minor releases and translation files out of the box. Going forward, 
            this will be one of the best ways to guarantee your site stays up to date and secure and, 
            as such, disabling these updates is strongly discouraged. <em>For help with updates, visit the
                <a href="https://codex.wordpress.org/Updating_WordPress">Updating WordPress</a> Codex page.</em>
        </p>

        <?php
        if ((defined('AUTOMATIC_UPDATER_DISABLED') && AUTOMATIC_UPDATER_DISABLED) ||
                (defined('WP_AUTO_UPDATE_CORE') && !WP_AUTO_UPDATE_CORE)):
            ?>
            <table class="widefat" cellspacing="0">
                <tr><td><span class="dashicons dashicons-warning"></span> <strong>Core updates</strong> &mdash; 
                        development, minor, and major WordPress updates are all <strong>disabled</strong> 
                        via defined constants in <tt>wp-config.php</tt> file.
                </td></tr>
            </table>
        <?php else: ?>
            <p>Please select the types of core updates you would like this blog to use:</p>
            <form method="post" id="cwis-core-updates-form">
                <input type="hidden" id="_wpnonce" name="_wpnonce" value="<?php echo wp_create_nonce('cwis-core-updates'); ?>">
                <table class="wp-list-table widefat plugins" cellspacing="0" id="cwis-core-updates-table">
                    <thead>
                        <tr>
                            <?php if ($wp_old_version): ?>
                                <th scope="col" id="cb1" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-1">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </th>
                            <?php else: ?>
                                <td scope="col" id="cb1" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-1">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </td>
                            <?php endif; ?>
                            <th scope="col" id="description1" class="manage-column column-description">Description</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th scope="col" class="manage-column" colspan="2">
                                <input type="submit" name="submit-cwis-core-updates" class="button-primary" value="<?php _e('Save Changes') ?>" />
                            </th>
                        </tr>
                    </tfoot>
                    <tbody class="plugins" id="the-list">
                        <tr class="inactive <?php echo $cwis_auto_core_updates['dev'] ? 'success' : 'info'; ?>">
                            <th scope="row" class="check-column">
                                <label class="screen-reader-text" for="cb-enable-1">Enable development updates</label>
                                <input type="checkbox" name="allow_auto_core_updates[]" value="dev"<?php
                                echo checked(1, $cwis_auto_core_updates['dev'], false);
                                ?> />
                            </th>
                            <td><strong>Development updates</strong>
                                <div class="second">This enables nightly builds and core development updates.
                                    <em>Only use this if you really know what you are doing.</em></div>
                            </td>
                        </tr>
                        <tr class="active <?php echo $cwis_auto_core_updates['minor'] ? 'success' : 'warning'; ?>">
                            <th scope="row" class="check-column">
                                <label class="screen-reader-text" for="checkbox_1">Enable minor updates</label>
                                <input type="checkbox" name="allow_auto_core_updates[]" value="minor"<?php
                                echo checked(1, $cwis_auto_core_updates['minor'], false);
                                ?> />
                            </th>
                            <td><strong>Minor updates</strong>
                                <div class="second">This enables minor core updates (e.g., 4.7.4, 4.8.3), such as maintenance and security releases.</div>
                            </td>
                        </tr>
                        <tr class="inactive <?php echo $cwis_auto_core_updates['major'] ? 'success' : 'info'; ?>">
                            <th scope="row" class="check-column">
                                <label class="screen-reader-text" for="checkbox_1">Enable major updates</label>
                                <input type="checkbox" name="allow_auto_core_updates[]" value="major"<?php
                                echo checked(1, $cwis_auto_core_updates['major'], false);
                                ?> />
                            </th>
                            <td><strong>Major updates</strong>
                                <div class="second">This enables major core release updates (e.g., 4.7, 4.8).
                                    <em>Before use, please <a href="https://codex.wordpress.org/WordPress_Backups"><u>back up your database and files</u></a>.</em></div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </form>
        <?php endif; ?>
        <br />

        <h3>WordPress Plugin Updates</h3>
        <p>By default, automatic background updates only happen for plugins and themes in special cases,
            as determined by the WordPress.org API response, which is controlled by the WordPress security team 
            for patching critical vulnerabilities.
        </p>

        <?php if (defined('AUTOMATIC_UPDATER_DISABLED') && AUTOMATIC_UPDATER_DISABLED): ?>
            <table class="widefat" cellspacing="0">
                <tr><td><span class="dashicons dashicons-warning"></span> <strong>Plugin updates</strong> &mdash;
                        all types of automatic background updates are completely <strong>disabled</strong>
                        via defined constants in <tt>wp-config.php</tt> file.
                </td></tr>
            </table>
        <?php else: ?>
            <p>To enable or disable updates in all cases, you can select here the plugins you want to allow to update:</p>
            <form method="post" id="cwis-plugin-updates-form">
                <input type="hidden" id="_wpnonce" name="_wpnonce" value="<?php echo wp_create_nonce('cwis-plugin-updates'); ?>">
                <table class="wp-list-table widefat plugins" cellspacing="0" id="cwis-plugin-updates-table">
                    <thead>
                        <tr>
                            <?php if ($wp_old_version): ?>
                                <th scope="col" id="cb2" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-2">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </th>
                            <?php else: ?>
                                <td scope="col" id="cb2" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-2">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </td>
                            <?php endif; ?>
                            <th scope="col" id="name" class="manage-column column-name">Plugin</th>
                            <th scope="col" id="description2" class="manage-column column-description">Description</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th scope="col" class="manage-column" colspan="3">
                                <input type="submit" name="submit-cwis-plugin-updates" class="button-primary" value="<?php _e('Save Changes') ?>" />
                            </th>
                        </tr>
                    </tfoot>
                    <tbody class="plugins" id="the-list">
                        <?php
                        if (!empty($all_plugins_installed)):
                            $plugin_num = 1;
                            $active_plugins = (array) get_option('active_plugins', array());
                            foreach ($all_plugins_installed as $plugin_key_name => $plugin):
                                $is_checkbox_checked = isset($cwis_auto_plugin_updates[$plugin_key_name]) && $cwis_auto_plugin_updates[$plugin_key_name];
                                $checkbox_attributes = $is_checkbox_checked ? 'checked="checked"' : '';
                                $plugin_status = in_array($plugin_key_name, $active_plugins) ? 'active' : 'inactive';
                                $check_tag = (version_compare(get_bloginfo('version'), '4', '>=')) ? 'th' : 'td';

                                // Get plugin security risk level
                                $plugin_securisk_level = $is_checkbox_checked ? # reduce risk if checked
                                        0 : (isset($plugin['SecuriskLevel']) ? $plugin['SecuriskLevel'] : 1);
                                $plugin_securisk_data = $security_risk_levels[$plugin_securisk_level];
                                ?>
                                <tr class="<?php echo $plugin_status . ' ' . $plugin_securisk_data['context']; ?>">
                                    <?php if ($wp_old_version): ?>
                                        <td scope="row" class="check-column">
                                            <label class="screen-reader-text" for="checkbox_<?php echo $plugin_num; ?>">Select <?php echo esc_html($plugin['Name']); ?></label>
                                            <input type="checkbox" name="allow_auto_plugin_updates[]" <?php echo $checkbox_attributes; ?> value="<?php echo $plugin_key_name; ?>" id="checkbox_<?php echo $plugin_num; ?>">
                                        </td>
                                    <?php else: ?>
                                        <th scope="row" class="check-column">
                                            <label class="screen-reader-text" for="checkbox_<?php echo $plugin_num; ?>">Select <?php echo esc_html($plugin['Name']); ?></label>
                                            <input type="checkbox" name="allow_auto_plugin_updates[]" <?php echo $checkbox_attributes; ?> value="<?php echo $plugin_key_name; ?>" id="checkbox_<?php echo $plugin_num; ?>">
                                        </th>
                                    <?php endif; ?>
                                    <td class="plugin-title"><strong><?php echo esc_html($plugin['Name']); ?></strong>
                                        <div class="row-actions visible"><a href="#legend"><?php echo $plugin_securisk_data['title']; ?></a></div></td>
                                    <td class="column-description desc">
                                        <div class="plugin-description"><p><?php echo $plugin['Description']; ?></p></div>
                                        <div class="<?php echo $plugin_status; ?> second plugin-version-author-uri">Version <?php echo esc_html($plugin['Version']); ?> |
                                            By <?php if (!empty($plugin['AuthorURI'])): ?>
                                                <a target="_blank" href="<?php echo $plugin['AuthorURI']; ?>" title="Visit author homepage"><?php echo esc_html($plugin['Author']); ?></a>
                                            <?php else: ?>
                                                <?php echo esc_html($plugin['Author']); ?>
                                            <?php endif; ?>
                                            <?php if (!empty($plugin['PluginURI'])): ?> |
                                                <a target="_blank" href="<?php echo $plugin['PluginURI']; ?>" title="Visit plugin site">Visit plugin site</a>
                                            <?php endif; ?>
                                        </div>
                                    </td>
                                </tr>
                                <?php
                                $plugin_num++;
                            endforeach;
                        else:
                            ?>
                            <tr><td colspan="3">No Plugin Found</td></tr>
                        <?php endif; ?>
                    </tbody>
                </table>
            </form>
        <?php endif; ?>
        <br />

        <h3>WordPress Theme Updates</h3>
        <p>By default, automatic background updates only happen for themes in special cases, determined
            by the WordPress security team for patching critical vulnerabilities.<br />
            <strong>Please note:</strong> Any customizations you have made to theme files will be lost.
            Please consider using <a href="https://codex.wordpress.org/Child_Themes">child themes</a>
            for modifications.
        </p>

        <?php if (defined('AUTOMATIC_UPDATER_DISABLED') && AUTOMATIC_UPDATER_DISABLED): ?>
            <table class="widefat" cellspacing="0">
                <tr><td><span class="dashicons dashicons-warning"></span> <strong>Theme updates</strong> &mdash; 
                        all types of automatic background updates are completely <strong>disabled</strong>
                        via defined constants in <tt>wp-config.php</tt> file.
                </td></tr>
            </table>
        <?php else: ?>
            <p>To enable or disable updates in all cases, you can select here the themes you want to allow to update:</p>
            <form method="post" id="cwis-theme-updates-form">
                <input type="hidden" id="_wpnonce" name="_wpnonce" value="<?php echo wp_create_nonce('cwis-theme-updates'); ?>">
                <table class="wp-list-table widefat plugins" cellspacing="0" id="cwis-theme-updates-table">
                    <thead>
                        <tr>
                            <?php if ($wp_old_version): ?>
                                <th scope="col" id="cb2" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-2">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </th>
                            <?php else: ?>
                                <td scope="col" id="cb2" class="manage-column column-cb check-column">
                                    <label class="screen-reader-text" for="cb-select-all-2">Select All</label>
                                    <input id="cb-select-all-2" type="checkbox">
                                </td>
                            <?php endif; ?>
                            <th scope="col" id="name" class="manage-column column-name">Theme</th>
                            <th scope="col" id="description2" class="manage-column column-description">Description</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th scope="col" class="manage-column" colspan="3">
                                <input type="submit" name="submit-cwis-theme-updates" class="button-primary" value="<?php _e('Save Changes') ?>" />
                            </th>
                        </tr>
                    </tfoot>
                    <tbody class="themes" id="the-list">
                        <?php
                        if (!empty($all_themes_installed)):
                            $theme_num = 1;
                            $active_themes = (array) get_option('active_themes', array());
                            foreach ($all_themes_installed as $theme_key_name => $theme):
                                $is_checkbox_checked = isset($cwis_auto_theme_updates[$theme_key_name]) && $cwis_auto_theme_updates[$theme_key_name];
                                $checkbox_attributes = $is_checkbox_checked ? 'checked="checked"' : '';
                                $theme_status = in_array($theme_key_name, $active_themes) ? 'active' : 'inactive';
                                $check_tag = (version_compare(get_bloginfo('version'), '4', '>=')) ? 'th' : 'td';

                                // Get theme security risk level
                                $theme_securisk_level = $is_checkbox_checked ? # reduce risk if checked
                                        0 : (isset($theme['SecuriskLevel']) ? $theme['SecuriskLevel'] : 1);
                                $theme_securisk_data = $security_risk_levels[$theme_securisk_level];
                                ?>
                                <tr class="<?php echo $theme_status . ' ' . $theme_securisk_data['context']; ?>">
                                    <?php if ($wp_old_version): ?>
                                        <td scope="row" class="check-column">
                                            <label class="screen-reader-text" for="checkbox_<?php echo $theme_num; ?>">Select <?php echo esc_html($theme['Name']); ?></label>
                                            <input type="checkbox" name="allow_auto_theme_updates[]" <?php echo $checkbox_attributes; ?> value="<?php echo $theme_key_name; ?>" id="checkbox_<?php echo $theme_num; ?>">
                                        </td>
                                    <?php else: ?>
                                        <th scope="row" class="check-column">
                                            <label class="screen-reader-text" for="checkbox_<?php echo $theme_num; ?>">Select <?php echo esc_html($theme['Name']); ?></label>
                                            <input type="checkbox" name="allow_auto_theme_updates[]" <?php echo $checkbox_attributes; ?> value="<?php echo $theme_key_name; ?>" id="checkbox_<?php echo $theme_num; ?>">
                                        </th>
                                    <?php endif; ?>
                                    <td class="plugin-title"><strong><?php echo esc_html($theme['Name']); ?></strong>
                                        <div class="row-actions visible"><a href="#legend"><?php echo $theme_securisk_data['title']; ?></a></div></td>
                                    <td class="column-description desc">
                                        <div class="theme-description"><p><?php echo $theme['Description']; ?></p></div>
                                        <div class="<?php echo $theme_status; ?> second theme-version-author-uri">Version <?php echo esc_html($theme['Version']); ?> |
                                            By <?php if (!empty($theme['AuthorURI'])): ?>
                                                <a target="_blank" href="<?php echo $theme['AuthorURI']; ?>" title="Visit author homepage"><?php echo esc_html($theme['Author']); ?></a>
                                            <?php else: ?>
                                                <?php echo esc_html($theme['Author']); ?>
                                            <?php endif; ?>
                                            <?php if (!empty($theme['ThemeURI'])): ?> |
                                                <a target="_blank" href="<?php echo $theme['ThemeURI']; ?>" title="Visit theme site">Visit theme site</a>
                                            <?php endif; ?>
                                        </div>
                                    </td>
                                </tr>
                                <?php
                                $theme_num++;
                            endforeach;
                        else:
                            ?>
                            <tr><td colspan="3">No Theme Found</td></tr>
                        <?php endif; ?>
                    </tbody>
                </table>
            </form>
        <?php endif; ?>
        <br/>

        <?php if (!(defined('AUTOMATIC_UPDATER_DISABLED') && AUTOMATIC_UPDATER_DISABLED)): ?>
            <table class="wp-list-table widefat">
                <thead>
                    <tr>
                        <th><a name="legend">Legend</a></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <ul class="list-legend">
                                <?php foreach ($security_risk_levels as $plugin_securisk_data): ?>
                                    <li class="<?php echo $plugin_securisk_data['context']; ?>"><strong><?php echo $plugin_securisk_data['title'] . '</strong><br />' . $plugin_securisk_data['description']; ?></li>
                                <?php endforeach; ?>
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>
            <br/>

            <table class="wp-list-table widefat">
                <thead>
                    <tr>
                        <th><a name="instructions">Instructions</a></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <ol class="list-instructions">
                                <li>Tick checkbox to allow the plugin or theme to update automatically (recommended for most cases, reduces the security risks).</li>
                                <li>Uncheck to remove the plugin or theme from the update (may be useful for customized files, disables even forced security pushes from the WordPress security team).</li>
                                <li>Click "Save Changes" (in some cases required to logout and login to get the proper effect).</li>
                            </ol>
                        </td>
                    </tr>
                </tbody>
            </table>
        <?php endif; ?>
        <div class="clear"></div>
    </div>
</div>
