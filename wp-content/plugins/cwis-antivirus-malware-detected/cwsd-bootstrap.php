<?php

/**
 * The CWSD bootstrap file
 *
 * This file is includes all of the dependencies used by the plugin,
 * registers the activation and deactivation functions, and defines a function
 * that starts the plugin.
 *
 * @link              https://cobweb-security.com
 * @since             1.6.0
 * @package           Cwsd
 */
// If this file is called directly, abort.
if (!defined('WPINC')) {
    die;
}

/**
 * The code that runs during plugin activation.
 * 
 * @since   1.0.5
 */
if (!function_exists('activate_cwsd')) {

    function activate_cwsd()
    {
        require_once CWIS_PLUGIN_DIR_PATH . 'includes/defender/class-filesystem.php';
        $cwis_defender_filesystem = new Cwis_Defender_Filesystem();

        // Put the loader file in the root directory
        if (!$cwis_defender_filesystem->plugin_loader_install()) {
            wp_die(__('Cannot install WebDefender plugin loader.'));
        }

        // Put directory indexes
        $cwis_defender_filesystem->put_directory_indexes();

        // Protect content directories
        $cwis_defender_filesystem->protect_content_dirs();

        // Install the guarder's traps
        require_once CWIS_PLUGIN_DIR_PATH . 'includes/defender/class-guarder.php';
        $cwis_defender_guarder = new Cwis_Defender_Guarder();
        $cwis_defender_guarder->manage_traps(true);
    }

}

/**
 * The code that runs during plugin uninstallation.
 * 
 * @since    1.0.7
 */
if (!function_exists('uninstall_cwsd')) {

    function uninstall_cwsd()
    {
        require_once CWIS_PLUGIN_DIR_PATH . 'includes/defender/class-filesystem.php';
        $cwis_defender_filesystem = new Cwis_Defender_Filesystem();

        // Remove the loader file from the root directory
        $cwis_defender_filesystem->plugin_loader_uninstall();

        // Uninstall the guarder's traps
        require_once CWIS_PLUGIN_DIR_PATH . 'includes/defender/class-guarder.php';
        $cwis_defender_guarder = new Cwis_Defender_Guarder();
        $cwis_defender_guarder->manage_traps(false);
    }

}

// Define path to the main plugin file and register hooks
register_activation_hook(CWIS_MAIN_FILE_PATH, 'activate_cwsd');
register_uninstall_hook(CWIS_MAIN_FILE_PATH, 'uninstall_cwsd');

/**
 * The core plugin classes that is used to define admin-specific hooks.
 * Note: plugin_dir_path() introduced in WordPress 2.8.0
 */
require_once plugin_dir_path(__FILE__) . 'includes/core/class-foundation.php';
require plugin_dir_path(__FILE__) . 'includes/class-cwsd.php';

/**
 * Begins execution of the plugin.
 *
 * Since everything within the plugin is registered via hooks,
 * then kicking off the plugin from this point in the file does
 * not affect the page life cycle.
 *
 * @since    1.0.0
 */
function run_cwsd()
{
    $plugin = new Cwsd('cwsd', $version = CWIS_PLUGIN_VERSION);
    $plugin->run();
}

run_cwsd();
