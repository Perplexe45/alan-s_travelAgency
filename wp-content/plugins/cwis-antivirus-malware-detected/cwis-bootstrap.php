<?php

/**
 * The CWIS bootstrap file
 *
 * This file is includes all of the dependencies used by the plugin,
 * registers the activation and deactivation functions, and defines a function
 * that starts the plugin.
 *
 * @link              https://cobweb-security.com
 * @since             1.0.0
 * @package           Cwis
 */
// If this file is called directly, abort.
if (!defined('WPINC')) {
    die;
}

/**
 * The code that runs during plugin activation.
 * 
 * @since   3.0.1
 */
if (!function_exists('activate_cwis')) {

    function activate_cwis()
    {
        // Scheduling a recurring cron job every minute
        if (!wp_next_scheduled('cwis_scheduled_events')) {
            wp_schedule_event(time(), 'minutely', 'cwis_scheduled_events');
        }
    }

}

/**
 * The code that runs during plugin deactivation or uninstallation.
 * 
 * @since    2.0.5
 */
if (!function_exists('deactivate_cwis')) {

    function deactivate_cwis()
    {
        // Unschedule deprecated cron hook
        wp_unschedule_event(wp_next_scheduled('cwis_cron_hook'), 'cwis_cron_hook');

        // Unschedule tasks
        $timestamp = wp_next_scheduled('cwis_scheduled_events');
        wp_unschedule_event($timestamp, 'cwis_scheduled_events');

        // Delete AJAX options
        delete_option('CWIS_AJAX_ID');
        delete_option('CWIS_AJAX_PASS');
        delete_option('CWIS_LAST_SCAN');
    }

}

/**
 * The code that runs during plugin uninstallation.
 * 
 * @since    2.3.0
 */
if (!function_exists('uninstall_cwis')) {

    function uninstall_cwis()
    {
        deactivate_cwis();

        // We can safely request filesystem credentials without any issues
        $creds = request_filesystem_credentials(site_url() . '/wp-admin/', '', false, false, array());

        // Initialize the API
        if (!WP_Filesystem($creds)) {
            return false;
        }

        global $wp_filesystem;

        // Get upload path
        $upload_dir = wp_upload_dir();
        $upload_path = $upload_dir['basedir'] . '/cwis';

        // Delete the temporary files directory
        $wp_filesystem->rmdir($upload_path, true);
    }

}

// Define path to the main plugin file and register hooks
register_activation_hook(CWIS_MAIN_FILE_PATH, 'activate_cwis');
register_deactivation_hook(CWIS_MAIN_FILE_PATH, 'deactivate_cwis');
register_uninstall_hook(CWIS_MAIN_FILE_PATH, 'uninstall_cwis');

/**
 * The core plugin classes that is used to define admin-specific hooks.
 * Note: plugin_dir_path() introduced in WordPress 2.8.0
 */
require_once CWIS_PLUGIN_DIR_PATH . 'includes/core/class-foundation.php';
require CWIS_PLUGIN_DIR_PATH . 'includes/class-cwis.php';

/**
 * Begins execution of the plugin.
 *
 * Since everything within the plugin is registered via hooks,
 * then kicking off the plugin from this point in the file does
 * not affect the page life cycle.
 *
 * @since    1.0.0
 */
function run_cwis()
{
    $plugin = new Cwis('cwis', $version = CWIS_PLUGIN_VERSION);
    $plugin->run();
}

run_cwis();
